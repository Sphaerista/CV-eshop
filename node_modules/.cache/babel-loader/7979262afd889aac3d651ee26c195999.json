{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\13-react-portfolio-eshop\\\\src\\\\components\\\\AuthForm\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../hooks/auth-context\";\nimport styles from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"AIzaSyBuCsnV4ooj8oMtmZfCYx1LoHp-MlP57zs\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const switcherHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const emailHandler = e => {\n    e.preventDefault();\n    setEmailInput(e.target.value);\n  };\n\n  const passwordHandler = e => {\n    e.preventDefault();\n    setPasswordInput(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailInput;\n    const enteredPassword = passwordInput;\n    let url;\n\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${KEY}`;\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${KEY}`;\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Auth failed\";\n\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken, data.email);\n      history.push(\"/home\");\n    }).catch(err => {\n      alert(err.message);\n    });\n    setEmailInput(\"\");\n    setPasswordInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: emailHandler,\n          type: \"email\",\n          id: \"email\",\n          value: emailInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: passwordHandler,\n          type: \"password\",\n          id: \"password\",\n          value: passwordInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.toggle,\n          type: \"button\",\n          onClick: switcherHandler,\n          children: isLogin ? \"Create new account\" : \"Login with account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"VLj369VvbhMnXuIG+yba/UMesVo=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/13-react-portfolio-eshop/src/components/AuthForm/AuthForm.js"],"names":["useContext","useState","useHistory","AuthContext","styles","KEY","AuthForm","isLogin","setIsLogin","emailInput","setEmailInput","passwordInput","setPasswordInput","authCtx","history","switcherHandler","prevState","emailHandler","e","preventDefault","target","value","passwordHandler","submitHandler","enteredEmail","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","Error","login","idToken","push","catch","err","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../hooks/auth-context\";\r\n\r\nimport styles from \"./AuthForm.module.css\";\r\nconst KEY = \"AIzaSyBuCsnV4ooj8oMtmZfCYx1LoHp-MlP57zs\";\r\n\r\nconst AuthForm = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const switcherHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    e.preventDefault();\r\n    setEmailInput(e.target.value);\r\n  };\r\n  const passwordHandler = (e) => {\r\n    e.preventDefault();\r\n    setPasswordInput(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const enteredEmail = emailInput;\r\n    const enteredPassword = passwordInput;\r\n\r\n    let url;\r\n    if (isLogin) {\r\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${KEY}`;\r\n    } else {\r\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${KEY}`;\r\n    }\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: enteredEmail,\r\n        password: enteredPassword,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Auth failed\";\r\n            if (data && data.error && data.error.message) {\r\n              errorMessage = data.error.message;\r\n            }\r\n            throw new Error(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .then((data) => {\r\n        authCtx.login(data.idToken, data.email);\r\n        history.push(\"/home\");\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n    setEmailInput(\"\");\r\n    setPasswordInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <section className={styles.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={styles.control}>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            onChange={emailHandler}\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={emailInput}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.control}>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            onChange={passwordHandler}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={passwordInput}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.actions}>\r\n          <button>{isLogin ? \"Login\" : \"Create account\"}</button>\r\n          <button\r\n            className={styles.toggle}\r\n            type=\"button\"\r\n            onClick={switcherHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}