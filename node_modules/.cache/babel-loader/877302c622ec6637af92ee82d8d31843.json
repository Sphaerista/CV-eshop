{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\13-react-portfolio-eshop\\\\src\\\\components\\\\CartSection\\\\FormOrder.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport styles from \"./FormOrder.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst FormOrder = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    firstName: true,\n    lastName: true,\n    city: true,\n    postal: true,\n    street: true\n  });\n  const inputFirstNameRef = useRef();\n  const inputLastNameRef = useRef();\n  const inputCityRef = useRef();\n  const inputPostalRef = useRef();\n  const inputStreetRef = useRef();\n\n  const confirmHandler = e => {\n    e.preventDefault();\n    const enteredFirstName = inputFirstNameRef.current.value;\n    const enteredLastName = inputLastNameRef.current.value;\n    const enteredCity = inputCityRef.current.value;\n    const enteredPostal = inputPostalRef.current.value;\n    const enteredStreet = inputStreetRef.current.value;\n    const enteredFirstNameIsValid = !isEmpty(enteredFirstName);\n    const enteredLastNameIsValid = !isEmpty(enteredLastName);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = !isEmpty(enteredPostal);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    setFormInputsValidity({\n      firstName: enteredFirstNameIsValid,\n      lastName: enteredLastNameIsValid,\n      city: enteredCityIsValid,\n      postal: enteredPostalIsValid,\n      street: enteredStreetIsValid\n    });\n    const formIsValid = enteredFirstNameIsValid && enteredLastNameIsValid && enteredCityIsValid && enteredPostalIsValid && enteredStreetIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onDataOrder({\n      Forename: enteredFirstName,\n      Surename: enteredLastName,\n      City: enteredCity,\n      Postal: enteredPostal,\n      Street: enteredStreet\n    });\n  };\n\n  const firstNameControlStyles = `${styles.control} ${!formInputsValidity.firstName && styles.invalid}`;\n  const lastNameControlStyles = `${styles.control} ${!formInputsValidity.lastName && styles.invalid}`;\n  const cityControlStyles = `${styles.control} ${!formInputsValidity.city && styles.invalid}`;\n  const postalControlStyles = `${styles.control} ${!formInputsValidity.postal && styles.invalid}`;\n  const streetControlStyles = `${styles.control} ${!formInputsValidity.street && styles.invalid}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"div-back-button\"],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"back-button\"],\n        onClick: props.onBackToOrder,\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"chekout-form\"],\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        onSubmit: confirmHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: firstNameControlStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"first-name\",\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"first-name\",\n            ref: inputFirstNameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), !formInputsValidity.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Can not be blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: lastNameControlStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"last-name\",\n            children: \"Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"last-name\",\n            ref: inputLastNameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), !formInputsValidity.lastName && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Can not be blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cityControlStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"City: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"city\",\n            ref: inputCityRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Can not be blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: postalControlStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"postal\",\n            children: \"Postal: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"postal\",\n            ref: inputPostalRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Can not be blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: streetControlStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"street\",\n            children: \"Street: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"street\",\n            ref: inputStreetRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Can not be blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"div-confirm-button\"],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles[\"confirm-button\"],\n            children: \"Make an order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormOrder, \"5JeeTnt6JyRLcdTM0BefAi91y4k=\");\n\n_c = FormOrder;\nexport default FormOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormOrder\");","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/13-react-portfolio-eshop/src/components/CartSection/FormOrder.js"],"names":["useState","useRef","styles","isEmpty","value","trim","FormOrder","props","formInputsValidity","setFormInputsValidity","firstName","lastName","city","postal","street","inputFirstNameRef","inputLastNameRef","inputCityRef","inputPostalRef","inputStreetRef","confirmHandler","e","preventDefault","enteredFirstName","current","enteredLastName","enteredCity","enteredPostal","enteredStreet","enteredFirstNameIsValid","enteredLastNameIsValid","enteredCityIsValid","enteredPostalIsValid","enteredStreetIsValid","formIsValid","onDataOrder","Forename","Surename","City","Postal","Street","firstNameControlStyles","control","invalid","lastNameControlStyles","cityControlStyles","postalControlStyles","streetControlStyles","onBackToOrder","form"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\r\nimport styles from \"./FormOrder.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst FormOrder = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    firstName: true,\r\n    lastName: true,\r\n    city: true,\r\n    postal: true,\r\n    street: true,\r\n  });\r\n  const inputFirstNameRef = useRef();\r\n  const inputLastNameRef = useRef();\r\n  const inputCityRef = useRef();\r\n  const inputPostalRef = useRef();\r\n  const inputStreetRef = useRef();\r\n\r\n  const confirmHandler = (e) => {\r\n    e.preventDefault();\r\n    const enteredFirstName = inputFirstNameRef.current.value;\r\n    const enteredLastName = inputLastNameRef.current.value;\r\n    const enteredCity = inputCityRef.current.value;\r\n    const enteredPostal = inputPostalRef.current.value;\r\n    const enteredStreet = inputStreetRef.current.value;\r\n\r\n    const enteredFirstNameIsValid = !isEmpty(enteredFirstName);\r\n    const enteredLastNameIsValid = !isEmpty(enteredLastName);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalIsValid = !isEmpty(enteredPostal);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n\r\n    setFormInputsValidity({\r\n      firstName: enteredFirstNameIsValid,\r\n      lastName: enteredLastNameIsValid,\r\n      city: enteredCityIsValid,\r\n      postal: enteredPostalIsValid,\r\n      street: enteredStreetIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredFirstNameIsValid &&\r\n      enteredLastNameIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalIsValid &&\r\n      enteredStreetIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onDataOrder({\r\n      Forename: enteredFirstName,\r\n      Surename: enteredLastName,\r\n      City: enteredCity,\r\n      Postal: enteredPostal,\r\n      Street: enteredStreet,\r\n    });\r\n  };\r\n\r\n  const firstNameControlStyles = `${styles.control} ${\r\n    !formInputsValidity.firstName && styles.invalid\r\n  }`;\r\n  const lastNameControlStyles = `${styles.control} ${\r\n    !formInputsValidity.lastName && styles.invalid\r\n  }`;\r\n  const cityControlStyles = `${styles.control} ${\r\n    !formInputsValidity.city && styles.invalid\r\n  }`;\r\n  const postalControlStyles = `${styles.control} ${\r\n    !formInputsValidity.postal && styles.invalid\r\n  }`;\r\n  const streetControlStyles = `${styles.control} ${\r\n    !formInputsValidity.street && styles.invalid\r\n  }`;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles[\"div-back-button\"]}>\r\n        <button className={styles[\"back-button\"]} onClick={props.onBackToOrder}>\r\n          ^\r\n        </button>\r\n      </div>\r\n\r\n      <div className={styles[\"chekout-form\"]}>\r\n        <form className={styles.form} onSubmit={confirmHandler}>\r\n          <div className={firstNameControlStyles}>\r\n            <label htmlFor=\"first-name\">First Name: </label>\r\n            <input type=\"text\" id=\"first-name\" ref={inputFirstNameRef} />\r\n            {!formInputsValidity.firstName && <p>Can not be blank</p>}\r\n          </div>\r\n          <div className={lastNameControlStyles}>\r\n            <label htmlFor=\"last-name\">Last Name: </label>\r\n            <input type=\"text\" id=\"last-name\" ref={inputLastNameRef} />\r\n            {!formInputsValidity.lastName && <p>Can not be blank</p>}\r\n          </div>\r\n          <div className={cityControlStyles}>\r\n            <label htmlFor=\"city\">City: </label>\r\n            <input type=\"text\" id=\"city\" ref={inputCityRef} />\r\n            {!formInputsValidity.city && <p>Can not be blank</p>}\r\n          </div>\r\n          <div className={postalControlStyles}>\r\n            <label htmlFor=\"postal\">Postal: </label>\r\n            <input type=\"text\" id=\"postal\" ref={inputPostalRef} />\r\n            {!formInputsValidity.postal && <p>Can not be blank</p>}\r\n          </div>\r\n          <div className={streetControlStyles}>\r\n            <label htmlFor=\"street\">Street: </label>\r\n            <input type=\"text\" id=\"street\" ref={inputStreetRef} />\r\n            {!formInputsValidity.street && <p>Can not be blank</p>}\r\n          </div>\r\n          <div className={styles[\"div-confirm-button\"]}>\r\n            <button className={styles[\"confirm-button\"]}>Make an order</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormOrder;\r\n"]},"metadata":{},"sourceType":"module"}