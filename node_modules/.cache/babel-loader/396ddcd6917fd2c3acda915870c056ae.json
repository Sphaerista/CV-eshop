{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\13-react-portfolio-eshop\\\\src\\\\lib\\\\CardProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react/cjs/react.development\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.state === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: +updatedTotalAmount\n    };\n  }\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHadler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const cartContext = {\n    // items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHadler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/13-react-portfolio-eshop/src/lib/CardProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","updatedTotalAmount","item","price","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHadler","type","cartContext","addItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,6BAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACD,KAAP,KAAiB,KAArB,EAA4B;AAC1B,UAAME,kBAAkB,GAAGF,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACE,IAAP,CAAYC,KAA3D;AACA,UAAMC,qBAAqB,GAAGL,KAAK,CAACH,KAAN,CAAYS,SAAZ,CAC3BH,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYN,MAAM,CAACE,IAAP,CAAYI,EADN,CAA9B;AAGA,UAAMC,gBAAgB,GAAGR,KAAK,CAACH,KAAN,CAAYQ,qBAAZ,CAAzB;AACA,QAAII,YAAJ;;AAEA,QAAID,gBAAJ,EAAsB;AACpB,YAAME,WAAW,GAAG,EAAE,GAAGF;AAAL,OAApB;AACAC,MAAAA,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAV,CAAf;AACAY,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACD,KAJD,MAIO;AACLD,MAAAA,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACE,IAA1B,CAAf;AACD;;AACD,WAAO;AACLN,MAAAA,KAAK,EAAEY,YADF;AAELX,MAAAA,WAAW,EAAE,CAACI;AAFT,KAAP;AAID;AACF,CArBD;;AAuBA,MAAMU,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAIA,QAAMoB,mBAAmB,GAAIb,IAAD,IAAU;AACpCY,IAAAA,kBAAkB,CAAC;AAAEE,MAAAA,IAAI,EAAE,KAAR;AAAed,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMe,WAAW,GAAG;AAClB;AACApB,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFL;AAGlBqB,IAAAA,OAAO,EAAEH;AAHS,GAApB;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGL,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMR,Y;;KAAAA,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react/cjs/react.development\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\nconst cartReducer = (state, action) => {\r\n  if (action.state === \"ADD\") {\r\n    const updatedTotalAmount = state.totalAmount + action.item.price;\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = { ...existingCartItem };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: +updatedTotalAmount,\r\n    };\r\n  }\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemToCartHadler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const cartContext = {\r\n    // items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHadler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}