{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\13-react-portfolio-eshop\\\\src\\\\pages\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react/cjs/react.development\";\nimport CartSection from \"./../components/CartSection/CartSection\";\nimport CartContext from \"./../lib/cart-context\";\nimport styles from \"./Cart.module.css\";\nimport FormOrder from \"./../components/CartSection/FormOrder\";\nimport { useEffect, useState } from \"react\";\nimport useHttp from \"./../hooks/use-http\";\nimport { makeOrder } from \"../lib/api\";\nimport LoadingSpinner from \"./../UI/LoadingSpinner\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status\n  } = useHttp(makeOrder);\n  const history = useHistory();\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.replace(\"/home\");\n    }\n  }, [status, history]);\n  const [orderedConfirmed, setOrderedConfirmed] = useState(false);\n  const ctx = useContext(CartContext);\n  console.log(ctx);\n\n  const cartItemAddHandler = item => {\n    ctx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItemRemoveHandler = id => {\n    ctx.removeItem(id);\n  };\n\n  const HandleConfirmOrder = () => {\n    setOrderedConfirmed(true);\n  };\n\n  const HandleBackToOrder = () => {\n    setOrderedConfirmed(false);\n  };\n\n  const handleMakeOrder = userData => {\n    const orderData = {\n      user: userData,\n      orderedItems: ctx.items,\n      totalAmount: ctx.totalAmount\n    };\n    sendRequest(orderData);\n  };\n\n  console.log(status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.overall,\n    children: [!orderedConfirmed && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles[\"cart-items\"],\n      children: ctx.items.map(item => /*#__PURE__*/_jsxDEV(CartSection, {\n        name: item.name,\n        amount: item.amount,\n        price: item.price,\n        onAdd: cartItemAddHandler.bind(null, item),\n        onRemove: cartItemRemoveHandler.bind(null, item.id)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ctx.items.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles[\"empty-cart\"],\n        children: \"Your Cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [!orderedConfirmed && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.total,\n            children: [\"Total price: $\", ctx.totalAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"div-confirm-button\"],\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles[\"confirm-button\"],\n              onClick: HandleConfirmOrder,\n              children: \"Confirm order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), status === \"pending\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"empty-cart\"],\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), orderedConfirmed && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormOrder, {\n            onBackToOrder: HandleBackToOrder,\n            onDataOrder: handleMakeOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"ciesBNrNKfkq9j2WkXC8P8FIsbo=\", false, function () {\n  return [useHttp, useHistory];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/13-react-portfolio-eshop/src/pages/Cart.js"],"names":["useContext","CartSection","CartContext","styles","FormOrder","useEffect","useState","useHttp","makeOrder","LoadingSpinner","useHistory","Cart","sendRequest","status","history","replace","orderedConfirmed","setOrderedConfirmed","ctx","console","log","cartItemAddHandler","item","addItem","amount","cartItemRemoveHandler","id","removeItem","HandleConfirmOrder","HandleBackToOrder","handleMakeOrder","userData","orderData","user","orderedItems","items","totalAmount","overall","map","name","price","bind","length","total"],"mappings":"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","sourcesContent":["import { useContext } from \"react/cjs/react.development\";\r\nimport CartSection from \"./../components/CartSection/CartSection\";\r\nimport CartContext from \"./../lib/cart-context\";\r\nimport styles from \"./Cart.module.css\";\r\nimport FormOrder from \"./../components/CartSection/FormOrder\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useHttp from \"./../hooks/use-http\";\r\nimport { makeOrder } from \"../lib/api\";\r\nimport LoadingSpinner from \"./../UI/LoadingSpinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Cart = () => {\r\n  const { sendRequest, status } = useHttp(makeOrder);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.replace(\"/home\");\r\n    }\r\n  }, [status, history]);\r\n  const [orderedConfirmed, setOrderedConfirmed] = useState(false);\r\n  const ctx = useContext(CartContext);\r\n  console.log(ctx);\r\n  const cartItemAddHandler = (item) => {\r\n    ctx.addItem({ ...item, amount: 1 });\r\n  };\r\n  const cartItemRemoveHandler = (id) => {\r\n    ctx.removeItem(id);\r\n  };\r\n\r\n  const HandleConfirmOrder = () => {\r\n    setOrderedConfirmed(true);\r\n  };\r\n  const HandleBackToOrder = () => {\r\n    setOrderedConfirmed(false);\r\n  };\r\n\r\n  const handleMakeOrder = (userData) => {\r\n    const orderData = {\r\n      user: userData,\r\n      orderedItems: ctx.items,\r\n      totalAmount: ctx.totalAmount,\r\n    };\r\n    sendRequest(orderData);\r\n  };\r\n  console.log(status);\r\n\r\n  return (\r\n    <div className={styles.overall}>\r\n      {!orderedConfirmed && (\r\n        <ul className={styles[\"cart-items\"]}>\r\n          {ctx.items.map((item) => (\r\n            <CartSection\r\n              key={item.id}\r\n              name={item.name}\r\n              amount={item.amount}\r\n              price={item.price}\r\n              onAdd={cartItemAddHandler.bind(null, item)}\r\n              onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <div>\r\n        {ctx.items.length === 0 ? (\r\n          <span className={styles[\"empty-cart\"]}>Your Cart is empty.</span>\r\n        ) : (\r\n          <>\r\n            {!orderedConfirmed && (\r\n              <>\r\n                <span className={styles.total}>\r\n                  Total price: ${ctx.totalAmount}\r\n                </span>\r\n                <div className={styles[\"div-confirm-button\"]}>\r\n                  <button\r\n                    className={styles[\"confirm-button\"]}\r\n                    onClick={HandleConfirmOrder}\r\n                  >\r\n                    Confirm order\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n            {status === \"pending\" && (\r\n              <div className={styles[\"empty-cart\"]}>\r\n                <LoadingSpinner />\r\n              </div>\r\n            )}\r\n            {orderedConfirmed && (\r\n              <>\r\n                <FormOrder\r\n                  onBackToOrder={HandleBackToOrder}\r\n                  onDataOrder={handleMakeOrder}\r\n                />\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}