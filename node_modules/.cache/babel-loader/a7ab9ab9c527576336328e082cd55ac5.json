{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Documents\\\\udemi-react\\\\13-react-portfolio-eshop\\\\src\\\\components\\\\InfoSection\\\\AddInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { useRef } from \"react/cjs/react.development\";\nimport AuthContext from \"../../hooks/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddInfo = () => {\n  _s();\n\n  const [openAddInfoSection, setOpenAddInfoSection] = useState(false);\n  const inputUserNameRef = useRef();\n  const inputFirstNameRef = useRef();\n  const inputLastNameRef = useRef();\n  const inputCityRef = useRef();\n  const inputPostalRef = useRef();\n  const inputStreetRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const emailPath = authCtx.email.split(\"@\").join(\"\").split(\".\").join(\"\");\n\n  const openAddInfoSectionHandler = () => {\n    setOpenAddInfoSection(true);\n  };\n\n  const closeAddInfoSectionHandler = () => {\n    setOpenAddInfoSection(false);\n  };\n\n  const updateInfo = async bodyCustom => {\n    try {\n      const response = await fetch(`https://portfolio-1-e0333-default-rtdb.firebaseio.com/users/${emailPath}.json`, {\n        method: \"PATCH\",\n        body: JSON.stringify(bodyCustom),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"sth wrong\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const addInfoHandler = e => {\n    e.preventDefault();\n    const enteredUserName = inputUserNameRef.current.value;\n    const enteredFirstName = inputFirstNameRef.current.value;\n    const enteredLastName = inputLastNameRef.current.value;\n    const enteredCity = inputCityRef.current.value;\n    const enteredPostal = inputPostalRef.current.value;\n    const enteredStreet = inputStreetRef.current.value;\n    let bodyEntry = {\n      UserName: enteredUserName,\n      Forename: enteredFirstName,\n      Surename: enteredLastName,\n      City: enteredCity,\n      Postal: enteredPostal,\n      Street: enteredStreet\n    };\n    let bodyCustom = {};\n\n    for (const key in bodyEntry) {\n      if (bodyEntry[key].length > 0) console.log(key);\n    } // updateInfo(bodyCustom);\n\n\n    console.log(bodyCustom);\n    setOpenAddInfoSection(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!openAddInfoSection && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openAddInfoSectionHandler,\n      children: \"Add info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), openAddInfoSection && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeAddInfoSectionHandler,\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addInfoHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: inputUserNameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"forename\",\n          children: \"Forename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"forename\",\n          ref: inputFirstNameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"surename\",\n          children: \"Surename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"surename\",\n          ref: inputLastNameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          ref: inputCityRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postal\",\n          children: \"Postal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postal\",\n          ref: inputPostalRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"street\",\n          children: \"Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"street\",\n          ref: inputStreetRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"Add data to \", emailPath]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(AddInfo, \"cF7DFJz/PEy7yvQ0hIyWQLxmp70=\");\n\n_c = AddInfo;\nexport default AddInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddInfo\");","map":{"version":3,"sources":["C:/Users/Win10/Documents/udemi-react/13-react-portfolio-eshop/src/components/InfoSection/AddInfo.js"],"names":["useContext","useState","useRef","AuthContext","AddInfo","openAddInfoSection","setOpenAddInfoSection","inputUserNameRef","inputFirstNameRef","inputLastNameRef","inputCityRef","inputPostalRef","inputStreetRef","authCtx","emailPath","email","split","join","openAddInfoSectionHandler","closeAddInfoSectionHandler","updateInfo","bodyCustom","response","fetch","method","body","JSON","stringify","headers","ok","Error","data","json","console","log","error","message","addInfoHandler","e","preventDefault","enteredUserName","current","value","enteredFirstName","enteredLastName","enteredCity","enteredPostal","enteredStreet","bodyEntry","UserName","Forename","Surename","City","Postal","Street","key","length"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { useRef } from \"react/cjs/react.development\";\r\nimport AuthContext from \"../../hooks/auth-context\";\r\n\r\nconst AddInfo = () => {\r\n  const [openAddInfoSection, setOpenAddInfoSection] = useState(false);\r\n\r\n  const inputUserNameRef = useRef();\r\n  const inputFirstNameRef = useRef();\r\n  const inputLastNameRef = useRef();\r\n  const inputCityRef = useRef();\r\n  const inputPostalRef = useRef();\r\n  const inputStreetRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const emailPath = authCtx.email.split(\"@\").join(\"\").split(\".\").join(\"\");\r\n\r\n  const openAddInfoSectionHandler = () => {\r\n    setOpenAddInfoSection(true);\r\n  };\r\n  const closeAddInfoSectionHandler = () => {\r\n    setOpenAddInfoSection(false);\r\n  };\r\n\r\n  const updateInfo = async (bodyCustom) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://portfolio-1-e0333-default-rtdb.firebaseio.com/users/${emailPath}.json`,\r\n        {\r\n          method: \"PATCH\",\r\n          body: JSON.stringify(bodyCustom),\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"sth wrong\");\r\n      }\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const addInfoHandler = (e) => {\r\n    e.preventDefault();\r\n    const enteredUserName = inputUserNameRef.current.value;\r\n    const enteredFirstName = inputFirstNameRef.current.value;\r\n    const enteredLastName = inputLastNameRef.current.value;\r\n    const enteredCity = inputCityRef.current.value;\r\n    const enteredPostal = inputPostalRef.current.value;\r\n    const enteredStreet = inputStreetRef.current.value;\r\n\r\n    let bodyEntry = {\r\n      UserName: enteredUserName,\r\n      Forename: enteredFirstName,\r\n      Surename: enteredLastName,\r\n      City: enteredCity,\r\n      Postal: enteredPostal,\r\n      Street: enteredStreet,\r\n    };\r\n    let bodyCustom = {};\r\n    for (const key in bodyEntry) {\r\n      if (bodyEntry[key].length > 0) console.log(key);\r\n    }\r\n\r\n    // updateInfo(bodyCustom);\r\n    console.log(bodyCustom);\r\n\r\n    setOpenAddInfoSection(false);\r\n  };\r\n  return (\r\n    <>\r\n      {!openAddInfoSection && (\r\n        <button onClick={openAddInfoSectionHandler}>Add info</button>\r\n      )}\r\n      {openAddInfoSection && (\r\n        <>\r\n          <button onClick={closeAddInfoSectionHandler}>^</button>\r\n          <form onSubmit={addInfoHandler}>\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input type=\"text\" id=\"username\" ref={inputUserNameRef} />\r\n            <label htmlFor=\"forename\">Forename</label>\r\n            <input type=\"text\" id=\"forename\" ref={inputFirstNameRef} />\r\n            <label htmlFor=\"surename\">Surename</label>\r\n            <input type=\"text\" id=\"surename\" ref={inputLastNameRef} />\r\n            <label htmlFor=\"city\">City</label>\r\n            <input type=\"text\" id=\"city\" ref={inputCityRef} />\r\n            <label htmlFor=\"postal\">Postal</label>\r\n            <input type=\"text\" id=\"postal\" ref={inputPostalRef} />\r\n            <label htmlFor=\"street\">Street</label>\r\n            <input type=\"text\" id=\"street\" ref={inputStreetRef} />\r\n            <button>Add data to {emailPath}</button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddInfo;\r\n"]},"metadata":{},"sourceType":"module"}